import React, { useState } from 'react';
import { useLocation } from 'react-router-dom';
import bgImage from '../assets/receipe_image.jpg'
import { FaBookmark } from 'react-icons/fa';
import toast, { Toaster } from 'react-hot-toast';

const GeneratedInformation = () => {
  const location = useLocation();
  const { recipes, ingredients } = location.state || {};
  const [saved, setSaved] = useState(false);
  if (!recipes) {
    return <p>No recipes available</p>;
  }

  const handleClick = async()=>{
    try{
      // console.log("Saved recipes", recipes)
      //api calling to save the response
      //Api calling
      const response = await fetch('http://localhost:3001/api/v1/postFavourite', {
        method: 'POST',
        headers: {
          "Content-type": 'application/json',
        },
        body: JSON.stringify({
          recipes: recipes
        }),
      })
      // Check for response success
      if (!response.ok) {
        throw new Error("Failed to fetch recipe");
      }
      setSaved(true);
      toast.success('Saved Successfully!');
    }
    catch(error){
      toast.error('An error occured while saving response');
    }
  }

  return (
    <div className='lg:px-10 md:px-8 px-5 lg:py-10 md:py-8 py-5 flex flex-col gap-2' 
    style={{
      backgroundImage: `linear-gradient(rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5)), url(${bgImage})`,
      backgroundSize: "cover",
      backgroundPosition: "center",
    }}>
      <div>
        {
          ingredients && (
            <div className='flex items-center justify-center gap-4'>
      <h1 className='text-4xl text-textOrange mb-4'>
        Results for: {ingredients}
      </h1>
      <button onClick={handleClick}><FaBookmark size={30} color={`${saved ? 'orange' : 'grey'}`}/></button>
      </div>
          )
        }
      </div>
      {/* dish details  */}
      <div>
        {/* dish name  */}
        <h2 className='text-4xl'>
          {recipes.dishName}
        </h2>
        {/* short description  */}
        <p className='text-2xl text-textGrey '>
          {recipes.description}
        </p>
        {/* cooking time and difficulty  */}
        <p className='text-2xl flex'>
          <h3 >Cooking Time: </h3> <span className='text-textGrey'>&nbsp; {recipes.cookingTime}</span>
        </p>
        <p className='text-2xl flex'>
          <h3 >Difficulty: </h3> <span className='text-textGrey'>&nbsp; {recipes.difficulty}</span>
        </p>

        <h3 className='text-3xl' >Ingredients:</h3>
        <ul>
          {recipes.ingredients.map((ingredient, index) => (
            <li key={index} className='text-2xl text-textGrey '>
              - {ingredient}
            </li>
          ))}
        </ul>

        <h3 className='text-3xl'>Steps to Prepare:</h3>
        <ol>
          {recipes.steps.map((step, index) => (
            <li key={index} className='text-2xl text-textGrey '>
              - {step}
            </li>
          ))}
        </ol>

        <h3 className='text-3xl'>
          Nutritional Information:
        </h3>
        <p className='text-2xl flex'>
          <span>Calories:</span> <span className='text-textGrey'>&nbsp; {recipes.nutrition.calories}</span> 
        </p>
        <p className='text-2xl flex'>
          <span>Fat:</span> <span className='text-textGrey'>&nbsp; {recipes.nutrition.fat}</span> 
        </p>
        <p className='text-2xl flex'>
          <span>Protein:</span> <span className='text-textGrey'>&nbsp; {recipes.nutrition.protein}</span>  
        </p>
        <p className='text-2xl flex'>
          <span>Carbohydrates:</span> <span className='text-textGrey'>&nbsp; {recipes.nutrition.carbohydrates}</span>  
        </p>
        <p className='text-2xl flex'>
          <span>Fiber:</span> <span className='text-textGrey'>&nbsp; {recipes.nutrition.fiber}</span>  
        </p>
        <p className='text-2xl flex'>
          <span>Sugar:</span>  <span className='text-textGrey'>&nbsp; {recipes.nutrition.sugar}</span>
        </p>
      </div>

      <p className='text-center py-2 italic text-textGrey'>
        Generated By Google Gemini-Pro
      </p>
      <Toaster/>
    </div>
  );
};

export default GeneratedInformation;
